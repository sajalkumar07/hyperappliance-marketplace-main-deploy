generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String       @id @default(cuid())
  username         String?      @unique
  bio              String?
  profileImageUrl  String?
  ethAddress       String?      @unique
  cardanoAddress   String?      @unique
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  aimsCreated      AIM[]        @relation("Creator")
  aimsOwned        AIM[]        @relation("Owner")
  deployments      Deployment[]
  hyperBoxes       HyperBox[]
  receivedMessages Message[]    @relation("ReceivedMessages")
  sentMessages     Message[]    @relation("SentMessages")

  @@index([ethAddress])
  @@index([cardanoAddress])
}

model AIM {
  id            String       @id @default(cuid())
  name          String
  description   String
  manifestUrl   String?
  requiredSpecs Json?
  licenseType   String
  price         Float?
  currency      String?
  tokenContract String?
  tokenId       String?
  chain         String?
  status        String
  imageUrl      String?
  repoUrl       String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  creatorId     String
  ownerId       String?
  creator       User         @relation("Creator", fields: [creatorId], references: [id])
  owner         User?        @relation("Owner", fields: [ownerId], references: [id])
  deployments   Deployment[]

  @@index([creatorId])
  @@index([ownerId])
  @@index([status])
  @@index([chain])
}

model HyperBox {
  id            String       @id @default(cuid())
  name          String
  specsCpu      String
  specsGpu      String
  specsRam      String
  specsStorage  String
  bandwidth     String?
  location      String?
  pricePerHour  Float
  currency      String
  available     Boolean      @default(true)
  walletAddress String?
  ipAddress     String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  ownerId       String
  deployments   Deployment[]
  owner         User         @relation(fields: [ownerId], references: [id])

  @@index([ownerId])
  @@index([available])
  @@index([location])
}

model Deployment {
  id              String    @id @default(cuid())
  status          String
  startTime       DateTime  @default(now())
  endTime         DateTime?
  nodeEndpointUrl String?
  aimInstanceId   String?
  lastActivity    DateTime  @default(now())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  aimId           String
  hyperBoxId      String
  userId          String
  aim             AIM       @relation(fields: [aimId], references: [id])
  hyperBox        HyperBox  @relation(fields: [hyperBoxId], references: [id])
  user            User      @relation(fields: [userId], references: [id])

  @@index([aimId])
  @@index([hyperBoxId])
  @@index([userId])
  @@index([status])
}

model Message {
  id         String   @id @default(cuid())
  content    String
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())
  senderId   String
  receiverId String
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])

  @@index([senderId])
  @@index([receiverId])
  @@index([read])
}
